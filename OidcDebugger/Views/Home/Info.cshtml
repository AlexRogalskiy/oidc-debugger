<info-card v-show="selected === 'authorizeUri'" title="Authorize URI">
  <p>The <b>authorize URI</b> on the authorization server is where an OpenID Connect flow starts.</p>
</info-card>

<info-card v-show="selected === 'redirectUri'" title="Redirect URI">
  <p>The <b>redirect URI</b> tells the issuer where to redirect the browser back to when the flow is done.</p>
</info-card>

<info-card v-show="selected === 'clientId'" title="Client ID">
  <p>Every client (website or mobile app) is identified by a <b>client ID</b>.
  Unlike a client secret, the client ID is a public value that does not have to be protected.</p>
</info-card>

<info-card v-show="selected === 'scopes'" title="Scope">
  <p>Clients can request additional information or permissions via <b>scopes</b>. The <code>openid</code> scope is the only required scope.</p>
  <p>The OpenID Connect spec <a href="http://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims">defines some scopes</a>,
  and applications can define their own custom scopes as well.</p>
</info-card>

<info-card v-show="selected === 'state'" title="State">
  <p>The <b>state</b> is an optional value that is carried through the whole flow and returned to the client.</p>
  <p>It's common to use state to store an anti-forgery token that can be verified after the login flow is complete. Another common use is storing the location the user should be redirected to after logging in.</p>
</info-card>

<info-card v-show="selected === 'nonce'" title="Nonce">
  <p>A <b>nonce</b> (or <b>n</b>umber used <b>once</b>) is a random value that is used to prevent <a href="https://en.wikipedia.org/wiki/Replay_attack">replay attacks</a>. </p>
</info-card>

<info-card v-show="flow === 'code'" title="Authorization Code flow" class="card-alternate">
  <p>The authorization server will respond with a <code>code</code>, which the client can exchange for tokens on a secure channel.</p>
  <p>This flow should be used when the application runs on a server, and is not recommended for JavaScript single-page applications.</p>
</info-card>

<info-card v-show="flow === 'implicit'" title="Implicit flow" class="card-alternate">
  <p>The authorization server will return an access and/or ID token directly back to the client.</p>
  <p>This flow is not as secure as the Authorization Code flow, but supports JavaScript single-page applications.</p>
</info-card>

<info-card v-show="flow === 'hybrid'" title="Hybrid flow" class="card-alternate">
  <p>The authorization server will respond with both a <code>code</code> (which the client can exchange for tokens on a secure channel) and a token.</p>
  <p>A common use case for the hybrid flow is using the <code>code</code> to get an access token on the server, and directly consuming an ID token on the client.</p>
</info-card>
